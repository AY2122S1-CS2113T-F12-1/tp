@startuml
participant ":Parser" as Parser
participant ":TestCommand" as TestCommand
participant "TestManager" as TestManager << class >>
participant ":TestUi" as TestUi
participant ":TestParser" as TestParser
participant ":DeckManager" as DeckManager
participant ":AnswerList" as AnswerList
participant ":Deck" as Deck

[-> Parser : parse("test")
activate Parser

ref over Parser, TestCommand : parseTestCommand()

[<-- Parser : TestCommand()
deactivate Parser

[->TestCommand : execute()
activate TestCommand

TestCommand -> TestManager : startTest()
activate TestManager

TestManager -> TestUi : getUserMessage()
activate TestUi

TestManager <-- TestUi : userMessage
deactivate TestUi

TestManager -> TestParser : toInt()
activate TestParser

TestParser --> TestManager : deckIndex

TestManager -> DeckManager : getTestDeck()
activate DeckManager

alt deckIndex == -1
DeckManager -> Deck : Deck()
activate Deck
loop every Deck in DeckManager
loop every FlashCard in Deck
DeckManager -> Deck : addFlashCard()
Deck --> DeckManager
end
end
DeckManager --> TestManager : deckToTest

else
TestManager -> DeckManager : get(deckIndex)
DeckManager --> TestManager : deckToTest
end


[<-- TestCommand
deactivate TestCommand

@enduml